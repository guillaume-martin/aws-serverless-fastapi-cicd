name: Serverless FastAPI CI/CD

on:
  # Trigger the workflow on push
  push:
    branches:
      - master

jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
      # Checkout repo so our workflow can access it
      - uses: actions/checkout@v2

      # Step 1
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      # Step 2
      - name: Install virtual environment
        run: pip3 install virtualenv

      # Step 3
      - name: Virtual ENV
        # Use caching because some actions may be repeated
        # Caching dependencies can speed up the proces
        uses: actions/cache@v2
        id: cache-venv  # name for referring later
        with:
          path: venv    # what we cache
          # The cache key depends on requirements.txt
          key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: 
            ${{ runner.os }}-venv-

      # Step 4
      - name: Activate ENV
        run: python -m virtualenv venv && source venv/bin/activate && pip3 install -r requirements.txt
        # only create if it doesn't already exist
        if: steps.cache-venv.outputs.cache.hit != 'true'

      # Step 5
      - name: Run Tests
        run: . venv/bin/activate && pytest

      # Step 6
      - name: Create archive of dependencies
        run: |
          cd ./venv/lib/python3.9/site-packages
          zip -r0 ../../../../api.zip .

      # Step 7
      - name: Add API files to Zip file
        run: cd ./api && zip -g ../api.zip -r .

      # Step 8
      - name: Upload zip file artifact
        uses: actions/upload-artifact@v2
        with:
          name: api
          path: api.zip

  CD:
    runs-on: ubuntu-latest
    steps:
      # Step 1
      - name: Install AWS CLI
        uses: unfor19/install-aws-cli-action@v1
        with: 
          version: 1
        env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      # Step 2
      - name: Download Lambda api.zip
        uses: actions/download-artifact@v2
        with:
          name: api

      # Step 3
      - name: Upload to S3
        run: aws s3 cp api.zip s3://fastapi123/api.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      # Step 4
      - name: Deploy new Lambda
        run: aws lambda update-function-code --function-name fastapi-test-function --s3-bucket fastapi123 --s3-key api.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

 

